# Implement a Python function called find_factorial that takes a positive integer as input and calculates its factorial using a while loop. Use the pass keyword to handle the case when the input is zero.

def find_factorial(n):
    if n == 0:
        pass
    else:
        factorial = 1
        while n > 0:
            factorial *= n
            n -= 1
        print(factorial)
  
find_factorial(5)  

  


# Write a Python program that prints all the prime numbers between 1 and 100 using a for loop and the break keyword.

  for num in range(1, 101):
    if num > 1:
        for i in range(2, num):
            if (num % i) == 0:
                break
        else:
            print(num)


# Implement a Python program that asks the user to enter a password. If the password matches a predefined secret password, display a success message. Otherwise, display an error message using an if/else ternary expression.

  def check_password():
    secret_password = "grut"  
    user_password = input("Enter the password: ")
    if user_password == secret_password:
        print("Success!")
    else :
        print("Incorrect password!")

  check_password()


# Create a Python function called print_pattern that takes an integer as input and prints the following pattern using a while loop:

  def print_pattern(n):
    i = 1
    while i <= n:
        j = 1
        while j <= i:
            print(j, end=" ")
            j += 1
        print()
        i += 1
  print_pattern(6) 


# Write a Python function called find_common_elements that takes two lists as input and returns a new list containing the common elements between the two input lists. Use a for loop and an if statement to check for common elements.

  def find_common_elements(list1, list2):
    common_elements = []
    for element in list1:
        if element in list2:
            common_elements.append(element)
    return common_elements
    
  print(find_common_elements([1,2,3,4], [1,2,5,6])) 



# Implement a Python function called find_prime_factors that takes a positive integer as input and returns a list of its prime factors. Use a while loop and an if statement to find and add prime factors to the list.

  def find_prime_factors(number):
    prime_factors = []
    div = 2

    while div <= number:
        if number % div == 0:
            prime_factors.append(div)
            number = number / div
        else:
            div += 1
    return prime_factors  
    
  print(find_prime_factors(56))   



# Create a Python program that simulates a basic calculator. It should repeatedly ask the user for two numbers and an operator (+, -, *, /) and perform the corresponding operation using if/elif statements. Use a while loop to allow the user to perform multiple calculations until they choose to exit.

  def calculator():
    while True:
        num1 = float(input("Enter the first number: "))
        operator = input("Enter the operator (+, -, *, /): ")
        num2 = float(input("Enter the second number: "))

        if operator == '+':
            result = num1 + num2
        elif operator == '-':
            result = num1 - num2
        elif operator == '*':
            result = num1 * num2
        elif operator == '/':
            result = num1 / num2
        else:
            print("Invalid operator!")
            continue

        print("Result:", result)

        choice = input("Do you want to perform another calculation? (yes/no): ")
        if choice.lower() != 'yes':
            break

  calculator() 




